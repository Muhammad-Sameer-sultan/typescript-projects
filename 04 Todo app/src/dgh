import inquirer from 'inquirer';
import * as fs from 'fs';

interface Todo {
  id: number;
  text: string;
}

let todos: Todo[] = [];

const loadTodos = () => {
  try {
    const data = fs.readFileSync('todos.json', 'utf-8');
    todos = JSON.parse(data);
  } catch (error) {
    todos = [];
  }
};

const saveTodos = () => {
  const data = JSON.stringify(todos, null, 2);
  fs.writeFileSync('todos.json', data);
};

const showTodos = () => {
  console.log('Todos:');
  todos.forEach((todo) => {
    console.log(`- ${todo.text}`);
  });
};

const addTodo = async () => {
  const { text } = await inquirer.prompt({
    type: 'input',
    name: 'text',
    message: 'Enter your todo:'
  });

  const newTodo: Todo = {
    id: todos.length + 1,
    text
  };

  todos.push(newTodo);
  saveTodos();
  console.log('Todo added successfully!');
  showTodos();
};

const updateTodo = async () => {
  const { id } = await inquirer.prompt({
    type: 'input',
    name: 'id',
    message: 'Enter the ID of the todo to update:'
  });

  const todoIndex = todos.findIndex((todo) => todo.id === parseInt(id, 10));

  if (todoIndex !== -1) {
    const { text } = await inquirer.prompt({
      type: 'input',
      name: 'text',
      message: 'Enter the updated todo:'
    });

    todos[todoIndex].text = text;
    saveTodos();
    console.log('Todo updated successfully!');
    showTodos();
  } else {
    console.log('Todo not found!');
  }
};

const deleteTodo = async () => {
  const { id } = await inquirer.prompt({
    type: 'input',
    name: 'id',
    message: 'Enter the ID of the todo to delete:'
  });

  const todoIndex = todos.findIndex((todo) => todo.id === parseInt(id, 10));

  if (todoIndex !== -1) {
    todos.splice(todoIndex, 1);
    saveTodos();
    console.log('Todo deleted successfully!');
    showTodos();
  } else {
    console.log('Todo not found!');
  }
};

const main = async () => {
  loadTodos();

  while (true) {
    const { action } = await inquirer.prompt({
      type: 'list',
      name: 'action',
      message: 'Choose an action:',
      choices: ['Add Todo', 'Update Todo', 'Delete Todo', 'Show Todos', 'Exit']
    });

    switch (action) {
      case 'Add Todo':
        await addTodo();
        break;
      case 'Update Todo':
        await updateTodo();
        break;
      case 'Delete Todo':
        await deleteTodo();
        break;
      case 'Show Todos':
        showTodos();
        break;
      case 'Exit':
        process.exit();
        break;
    }
  }
};

main();
